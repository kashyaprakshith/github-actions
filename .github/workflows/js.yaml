name: build
on: [push]

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  JS-build:
    runs-on: ubuntu-latest
    steps:
      # Check Out Code
      - name: Check Out Code
        uses: actions/checkout@v3

      # Use Node Version 18.x
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Caching npm modules.
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: npm clean install
        run: npm ci

      - name: run prettier Check
        run: npx prettier . --check   
        continue-on-error: true

      - name: Test
        run: npm test

      - name: Build
        run: npm run build --if-present

      # Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      # Autobuild
      ## Note: This step can be optional, in case the JavaScript code does not require a compilation step
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      # Perform CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      ## njss Scan
      # Perform nodejsscan
      - name: nodejsscan scan
        id: njsscan
        uses: ajinabraham/njsscan-action@master
        with:
          args: '. --sarif --output njss-results.sarif || true'

      # Upload scan results to github security tab
      - name: Upload njsscan report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'njss-results.sarif'

  Trivy-Scans:
    runs-on: ubuntu-latest
    steps:
      # Checkout Code
      - name: Check out code
        uses: actions/checkout@v3

      # Build Image
      - name: Build Image
        run: docker build -t '${{ github.repository }}:${{ github.sha }}' .

      # Run Trivy vulnerability scanner on the built image
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ github.repository }}:${{ github.sha }} '
          exit-code: "1"
          hide-progress: false
          format: "sarif"
          output: 'trivy-results.sarif'
          severity: "CRITICAL,HIGH"

      # Upload scan results to GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
