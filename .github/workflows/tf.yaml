name: Terraform Code Styling Checks

on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

permissions: read-all

jobs:
  build-terraform:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Code.
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.0.9" # Specify your desired Terraform version here
          
      # Step 3: Caching Terraform Plugins
      - name: Cache Terraform plugins
        uses: actions/cache@v2
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-
            ${{ runner.os }}-
            
      # Step 4: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init 

      # Step 5: Validation of Terraform code
      - name: Validate Terraform code
        run: terraform validate
        continue-on-error: false
        
      # Step 6: Planning Terraform changes
      - name: Plan Terraform changes
        run: terraform plan -input=false -lock=false

  tfsec-scan:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Code checkout.
      - name: Code Checkout
        uses: actions/checkout@master

      # Step 2: Run tfsec scan.
      - name: tfsec-security scan
        uses: aquasecurity/tfsec-action@v1.0.0

      # Step 3: Convert tfsec output to SARIF format.
      - name: SARIF conversion
        uses: tfsec/tfsec-sarif-action@master
        with:
          sarif_file: tfsec.sarif

      # Step 4: Upload results to GHAS 
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tfsec.sarif

  checkov-scan:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Code Checkout
      - name: Code Checkout
        uses: actions/checkout@v2

      # Step 2: Setup Python 3.8
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      # Step 3: Run checkov scan
      - name: Test with checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./  ##  replace "./" with the path of Terraform files for scanning.
        continue-on-error: true
        
      # Step 4: Rename SARIF file
      - name: Rename SARIF file
        run: mv results.sarif checkov-results.sarif
        continue-on-error: true

      # Step 5: Upload results to GHAS
      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: checkov-results.sarif
        continue-on-error: true

  tflint:
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout source code
      - uses: actions/checkout@v3
        name: Checkout source code

      # Step 2: Cache plugin dir
      - uses: actions/cache@v3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      # Step 3: Setup TFLint
      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.44.1

      # Step 4: Show TFLint version
      - name: Show version
        run: tflint --version

      # Step 5: Init TFLint
      - name: Init TFLint
        run: tflint --init

      # Step 6: Run TFLint
      - name: Run TFLint
        run: tflint -f sarif >> tflint.sarif
        continue-on-error: true

      # Step 7: Format Terraform code using terraform fmt
      - name: Format Terraform code
        run: terraform fmt -recursive -check=true
        continue-on-error: true

      # Step 8: Upload TFLint SARIF output to GHAS
      - name: Upload TFLint SARIF output to GHAS
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tflint.sarif
